*vim-ruby-block-helpers.txt*	Helpers for navigating and extracting hierarchy from nested ruby blocks
dewyze                                                *vim-ruby-block-helpers*

==============================================================================
CONTENTS                                     *vim-ruby-block-helpers-contents*
  1. Introduction...............................|vim-ruby-block-helpers-intro|
  2. Commands................................|vim-ruby-block-helpers-commands|
  3. Mappings................................|vim-ruby-block-helpers-mappings|

==============================================================================
INTRODUCTION                                    *vim-ruby-block-helpers-intro*

This plugin is intended to help with easier movement between ruby blocks as
well as aiding in working in various rspec files. It provides keybinding for
moving to parent and sibling blocs, and printing out information about block
nesting in a spec file.

Feel free to contribute or improve this by following the contributing
guidelines at https://github.com/dewyze/vim-ruby-block-helpers/CONTRIBUTING.md

==============================================================================
COMMANDS                                     *vim-ruby-block-helpers-commands*

:RubyBlockNext                                                *:RubyBlockNext*
  This will go to the beginning of the line of the next block at the sibling
  level. If run on the last block inside another block, it will go to the
  first sibling of the parent block.

:RubyBlockPrevious                                        *:RubyBlockPrevious*
  This will go to the beginning of the line of the previous block at the
  sibling level. If run on the first block inside another block, it will go to
  the first previous sibling of the parent block.

:RubyBlockParent                                            *:RubyBlockParent*
  This will go to the beginning of the line of the immediate block surrounding
  the block you are currently in.

:RubyBlockSpecParentContext                      *:RubyBlockSpecParentContext*
  This will go to the beginning of the line of the immediate rspec block
  surrounding the block you are currently in. Limited to
  describe/context/shared_example.

:RubyBlockStart                                              *:RubyBlockStart*
  This will go to the start of the current block.

:RubyBlockEnd                                                  *:RubyBlockEnd*
  This will go to the end of the current block.

:RubyBlockHierarchy                                      *:RubyBlockHierarchy*
  This will print the hierarchy of surrounding parent blocks of the current
  line. This can be useful in large spec files to learn where you are. For
  example, it will print:

  describe "foo" do   context "bar" do     it "baz" do

:RubyBlockSpecEnv                                          *:RubyBlockSpecEnv*
  *EXPERIMENTAL* This should really only be used in ruby test files, and it is
  tailored to those. It will print out the first line all `let/subject`
  blocks, as well as anytime an `@=` varable is defined in a setup section for
  a test. For example, it will print:

  describe "foo" do   let(:thing1) { "thing 1" }   context "bar" do
  \@thing2 = Thing2.new     it "baz" do

==============================================================================
MAPPINGS                                     *vim-ruby-block-helpers-mappings*

]b                Goes to next sibling block, or next sibling of parent block
[b        Goes to previous sibling block, or previous sibling of parent block
]p                            Goes to the beginning of the first parent block
]c     Go to the beginning of the first spec context block (describe/context)
]s                                             Goes to start of current block
]e                                               Goes to end of current block
]h                               Print the block hierachy to the current line
]v                  Prints the various 'lets', 'subjects', and '@=' variables


vim:tw=78:ts=8:ft=help:norl:
